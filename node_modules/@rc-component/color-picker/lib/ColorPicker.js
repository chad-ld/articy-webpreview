"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _trigger = _interopRequireDefault(require("@rc-component/trigger"));
var _useMergedState3 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));
var _react = _interopRequireDefault(require("react"));
var _ColorPickerPanel = _interopRequireDefault(require("./ColorPickerPanel"));
var _placements = _interopRequireDefault(require("./components/placements"));
var _util = require("./util");
var _excluded = ["open", "disabled", "trigger", "children", "onOpenChange", "placement", "classNames", "styles", "prefixCls", "builtinPlacements", "motion"];
var ColorPicker = function ColorPicker(props) {
  var open = props.open,
    disabled = props.disabled,
    _props$trigger = props.trigger,
    trigger = _props$trigger === void 0 ? 'click' : _props$trigger,
    children = props.children,
    onOpenChange = props.onOpenChange,
    _props$placement = props.placement,
    placement = _props$placement === void 0 ? 'bottomLeft' : _props$placement,
    classNames = props.classNames,
    styles = props.styles,
    _props$prefixCls = props.prefixCls,
    prefixCls = _props$prefixCls === void 0 ? _util.ColorPickerPrefixCls : _props$prefixCls,
    _props$builtinPlaceme = props.builtinPlacements,
    builtinPlacements = _props$builtinPlaceme === void 0 ? _placements.default : _props$builtinPlaceme,
    motion = props.motion,
    resetProps = (0, _objectWithoutProperties2.default)(props, _excluded);
  var _useMergedState = (0, _useMergedState3.default)(false, {
      value: open,
      postState: function postState(openData) {
        return !disabled && openData;
      },
      onChange: onOpenChange
    }),
    _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2),
    openValue = _useMergedState2[0],
    setOpenValue = _useMergedState2[1];
  return /*#__PURE__*/_react.default.createElement(_trigger.default, (0, _extends2.default)({
    action: [trigger],
    popupVisible: openValue,
    popup: /*#__PURE__*/_react.default.createElement(_ColorPickerPanel.default, props),
    popupPlacement: placement,
    onPopupVisibleChange: setOpenValue,
    popupClassName: classNames === null || classNames === void 0 ? void 0 : classNames.popup,
    popupStyle: styles === null || styles === void 0 ? void 0 : styles.popup,
    builtinPlacements: builtinPlacements,
    popupMotion: motion,
    prefixCls: prefixCls
  }, resetProps), children);
};
var _default = ColorPicker;
exports.default = _default;